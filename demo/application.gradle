// Copyright (c) 2012-2016 Saarland University
// All rights reserved.
//
// Author: Konrad Jamrozik, konrad.jamrozik@cispa.saarland
//
// This file is part of the "BotMate" project.
//
// github.com/konrad-jamrozik/botmate

assert serialPortWindowsNativeLibDir.isDirectory()
assert serialPortMacOSNativeLibDir.isDirectory()

// ---------- Application configuration ----------

apply plugin: 'application'
mainClassName = "com.github.konrad_jamrozik.botmate.demo.MainKt"
applicationDefaultJvmArgs = ["-Djava.library.path=${serialPortNativeLibDir}"]

tasks.run { JavaExec it -> it.args = ["stubBoth"] }

// ---------- Distributions configuration ----------

def distributions = project.extensions.getByName("distributions") as DistributionContainer

// Extract appContents CopySpec from 'main' distribution, then delete the distribution, as we will only use platform-specific
// distros that will bundle the appContents with platform-specific native rxtx lib.
def mainDist = distributions.findByName("main")
CopySpec appContents = mainDist.contents
distributions.remove(mainDist)
tasks.remove(tasks.installDist)
tasks.remove(tasks.distTar)
tasks.remove(tasks.distZip)
tasks.remove(tasks.assembleDist)

CopySpec windowsNativeContents = project.copySpec { into('libNative') { from serialPortWindowsNativeLibDir } }
CopySpec macOSNativeContents = project.copySpec { into('libNative') { from serialPortMacOSNativeLibDir } }

distributions.create("Windows") {
  it.contents.with(appContents)
  it.contents.with(windowsNativeContents)
}

distributions.create("MacOS") {
  it.contents.with(appContents)
  it.contents.with(macOSNativeContents)
}
